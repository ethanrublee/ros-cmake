set(genmsg_cpp_exe ${CMAKE_SOURCE_DIR}/ros/core/roscpp/scripts/genmsg_cpp.py)
# Message-generation support.
macro(genmsg_cpp)

  set(_autogen "")
  foreach(_msg ${ARGN})
    # Construct the path to the .msg file
    set(_input ${PROJECT_SOURCE_DIR}/${_msg})
  
    # rosbuild_gendeps(${PROJECT_NAME} ${_msg})
  
    get_filename_component(_fname ${_msg} NAME)

    string(REPLACE ".msg" ".h" _output_cpp_base ${_fname})

    message("OUTPUT_CPP_BASE ${_output_cpp_base}")
    set(_outdir ${ROSBUILD_GEN_DIR}/cpp/msg)
    set(_output_cpp ${_outdir}/${PROJECT_NAME}/${_output_cpp_base})

    foreach(dir ${DEPENDED_PACKAGE_PATHS})
      list(APPEND _incflags -I${dir})
    endforeach()

    # Add the rule to build the .h the .msg
    add_custom_command(OUTPUT ${_output_cpp} 
      COMMAND ${ROSBUILD_SUBSHELL} 
      ${genmsg_cpp_exe} 
      ${_input}
      -p ${PROJECT_NAME}
      -o ${_outdir}
      ${_incflags} -I${CMAKE_CURRENT_SOURCE_DIR}
      DEPENDS ${_input} ${genmsg_cpp_exe} ${gendeps_exe} rospackexe
      ${${PROJECT_NAME}_${_msg}_GENDEPS} ${ROS_MANIFEST_LIST}
      )
		     
    list(APPEND _autogen ${_output_cpp})
    
  endforeach(_msg)

  if (_autogen)
    set_source_files_properties(${_autogen}
      PROPERTIES
      HEADER_FILE_ONLY TRUE)
    add_dependencies(${PROJECT_NAME}_codegen ${_autogen})
    add_dependencies(roscpp_codegen ${PROJECT_NAME}_codegen)
  endif()

endmacro(genmsg_cpp)


set(gensrv_cpp_exe ${CMAKE_SOURCE_DIR}/ros/core/roscpp/scripts/gensrv_cpp.py)
# Service-generation support.
macro(gensrv_cpp)

  set(_autogen "")
  foreach(_srv ${ARGN})
    # Construct the path to the .srv file

    set(_input ${PROJECT_SOURCE_DIR}/${_srv})
    
    get_filename_component(_fname ${_srv} NAME)
    string(REPLACE ".srv" ".h" _output_cpp_base ${_fname})

    set(_outdir ${ROSBUILD_GEN_DIR}/cpp/srv)
    set(_output_cpp ${_outdir}/${PROJECT_NAME}/${_output_cpp_base})

    foreach(dir ${DEPENDED_PACKAGE_PATHS})
      list(APPEND _incflags -I${dir})
    endforeach()

    # Add the rule to build the .h from the .srv
    add_custom_command(
      OUTPUT ${_output_cpp} 
      COMMAND ${ROSBUILD_SUBSHELL} 
      ${gensrv_cpp_exe} 
      ${_input}
      -p${PROJECT_NAME}
      -o${_outdir}
      ${_incflags} -I${CMAKE_CURRENT_SOURCE_DIR}
      DEPENDS ${_input} ${gensrv_cpp_exe} ${genmsg_cpp_exe} ${gendeps_exe} 
      ${${PROJECT_NAME}_${_srv}_GENDEPS} ${ROS_MANIFEST_LIST} rospackexe
      )

    list(APPEND _autogen ${_output_cpp})

  endforeach(_srv)
  # message("autogen=${_autogen}")
  # Create a target that depends on the union of all the autogenerated
  # files

  if (_autogen)
    set_source_files_properties(${_autogen}
      PROPERTIES
      HEADER_FILE_ONLY TRUE)
    add_dependencies(${PROJECT_NAME}_codegen ${_autogen})
    add_dependencies(roscpp_codegen ${PROJECT_NAME}_codegen)
  endif()
endmacro(gensrv_cpp)
