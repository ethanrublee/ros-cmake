#!/usr/bin/env bash
#
#
# THIS FILE WAS AUTOGENERATED.  ANY CHANGES YOU MAKE HERE WILL BE
# LOST.    IF YOU FIND YOURSELF NEEDING TO CHANGE THINGS HERE SEE
#
#    http://where/is/the/wiki/page/for/this
# 
# If you need to change things here to make things work, that's
# a bug and you should *report* this to ros-developers@lists.ros.org or
# https://code.ros.org/trac/ros/.  Thanks for your help.  
#

case "$1" in help | --help | -h)
    echo "Usage: $0 [SHELL]"
    echo "Spawn a new shell with a ROS environment loaded"
    echo ""
    echo "SHELL can specified with or without a full path.  If SHELL"
    echo "is omitted the login shell is used by default."
    echo "Examples:"
    echo "   ./env.sh"
    echo "   ./env.sh tcsh"
    echo "   ./env.sh /bin/tcsh"
    echo "   ./env.sh /some/other/command arg1 arg2 ..."
    echo ""
    echo "To exit the environment simply exit the new shell."
    echo ""
    exit 1 ;;
esac

if [[ -z "$1" ]]
    then # user did not specify a shell
    NEW_SHELL=$SHELL 
    # only exit if no shell specified on command line *and* env already loaded 
    _ROS_BANNER=1
else
    NEW_SHELL=$1
    _ROS_BANNER=0
    shift
    ARGV=$*
fi

_ROS_SHELL=$NEW_SHELL

_setup_sh=$(basename $SHELL)
if [[ "$_setup_sh" == "zsh" ]] ; then
    _setup_sh=sh
fi

if [[ -z "$ROS_SETUP" ]] # a clean first invocation
then
    ROS_SETUP=@ROS_SETUP@.$_setup_sh
else
    ROS_SETUP=
fi

#
#  Subshell!
#
ROS_SETUP=$ROS_SETUP \
    _ROS_BANNER=$_ROS_BANNER \
    $NEW_SHELL $ARGV

STATUS=$?

if [[ $_ROS_BANNER -eq 1 ]]
then
    echo "Exited ROS environment."
fi

exit $STATUS
