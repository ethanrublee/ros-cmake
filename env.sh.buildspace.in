#!/usr/bin/env bash
#
#
# THIS FILE WAS AUTOGENERATED.  ANY CHANGES YOU MAKE HERE WILL BE
# LOST.    IF YOU FIND YOURSELF NEEDING TO CHANGE THINGS HERE SEE
#
#    http://where/is/the/wiki/page/for/this
# 
# If you need to change things here to make things work, that's
# a bug and you should *report* this to ros-developers@lists.ros.org or
# https://code.ros.org/trac/ros/.  Thanks for your help.  
#

case "$1" in help | --help | -h)
    echo "Usage: $0 [SHELL]"
    echo "Spawn a new shell with a ROS environment loaded"
    echo ""
    echo "SHELL can specified with or without a full path.  If SHELL"
    echo "is omitted the login shell is used by default."
    echo "Examples:"
    echo "   ./env.sh"
    echo "   ./env.sh tcsh"
    echo "   ./env.sh /bin/tcsh"
    echo "   ./env.sh /some/other/command arg1 arg2 ..."
    echo ""
    echo "To exit the environment simply exit the new shell."
    echo ""
    exit 1 ;;
esac

if [[ -z "$1" ]]
    then # user did not specify a shell
    NEW_SHELL=$SHELL 
    # only exit if no shell specified on command line *and* env already loaded 
    _ROS_BANNER=1
else
    NEW_SHELL=$1
    _ROS_BANNER=0
    shift
    ARGV=$*
fi

_ROS_SHELL=$NEW_SHELL

_setup_sh=$(basename $SHELL)
if [[ "$_setup_sh" == "zsh" ]] ; then
    _setup_sh=sh
fi

if [[ -z "$ROS_SETUP" ]] # a clean first invocation
then
    ROS_SETUP=@ROS_SETUP@.$_setup_sh
else
    ROS_SETUP=
fi

_ROS_OKAY=1

if [ -n "$ROS_BUILD" -a "$ROS_BUILD" != "@ROS_BUILD@" ]
then
    echo "****************************************************************"
    echo "Shazbot!  ROS_BUILD changed."
    echo "It appears that you are attempting to load an ROS environment"
    echo "that differs from the one already loaded"
    echo "       Loading ROS_BUILD=@ROS_BUILD@"
    echo "       Current ROS_BUILD=$ROS_BUILD"
    echo "****************************************************************"
    _ROS_OKAY=0
    _ROS_BANNER=0
fi

if [[ -n "$ROS_SHELL" ]] 
then  
    echo "****************************************************************"
    echo "You are currently in a shell with an ROS environment loaded."
    echo "Please exit the current shell and re-run $0 from a clean shell."
    echo "****************************************************************"
    _ROS_OKAY=0
    _ROS_BANNER=0
fi

if [[ $_ROS_OKAY -eq 1 ]]
then
    export ROS_ROOT=@CMAKE_SOURCE_DIR@/ros
    export ROS_BUILD=@CMAKE_BINARY_DIR@
    export PATH=$ROS_ROOT/bin:$ROS_BUILD/bin:$PATH
    export PYTHONPATH=$ROS_BUILD/gen/py:$ROS_ROOT/core/rosbuild/src:$ROS_ROOT/core/roslib/src:$PYTHONPATH
    export ROS_PACKAGE_PATH=@ROS_PACKAGE_PATH@
    if [ -z "$ROS_MASTER_URI" ] ; then
	export ROS_MASTER_URI=@ROS_MASTER_URI@
    fi

    # load rosbash goodies if available
    #_ROSBASH_GOODIES=$ROS_ROOT/tools/rosbash/ros$(basename $SHELL)
    #if [[ -f $_ROSBASH_GOODIES ]] ; then
    #    echo "Loading rosbash goodies from $ROSBASH_GOODIES"
    #	source $_ROSBASH_GOODIES
    #fi
    #unset _ROSBASH_GOODIES
fi
unset _ROS_OKAY

if [[ $_ROS_BANNER -eq 1 ]]
then
    WIDTH=$(( $COLUMNS-7 ))
    function topbar() 
    {
	for x in 0 $(seq $WIDTH) ; do
	    echo -n '%'
	done
	echo 
    }

    function printctr()
    {
	LEN=`echo "$*" | wc -c`
	LOFFSET=$(( ($WIDTH-$LEN)/2 ))
	ROFFSET=$(( $WIDTH-$LOFFSET-$LEN ))

	FORMAT="%%%${LOFFSET}s%s%${ROFFSET}s%%\n"
	printf $FORMAT " " "$*" " "
    }

    topbar
    printctr ""
    printctr "ROS: Robot Operating System"
    printctr ""
    printctr "Version @ROS_VERSION@"
    printctr ""
    printctr "Visit us at http://www.ros.org"
    printctr ""
    topbar
    printf "\n"
    printf "ROS environment has:\n"
    printf "   ROS_ROOT       = %s\n" $ROS_ROOT
    printf "   ROS_BUILD      = %s\n" $ROS_BUILD
    printf "   ROS_MASTER_URI = %s\n" $ROS_MASTER_URI
fi
unset _ROS_BANNER

#
#  Subshell!
#
ROS_ROOT=$ROS_ROOT \
    ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH \
    PYTHONPATH=$PYTHONPATH \
    _ROS_BANNER=$_ROS_BANNER \
    $NEW_SHELL $ARGV

STATUS=$?

if [[ $_ROS_BANNER -eq 1 ]]
then
    echo "Exited ROS environment."
fi

exit $STATUS
